# 4861. [파이썬 S/W 문제해결 기본] 3일차 - 회문

'''
ABBA처럼 어느 방향에서 읽어도 같은 문자열을 회문이라 한다.
NxN 크기의 글자판에서 길이가 M인 회문을 찾아 출력하는 프로그램을 만드시오.

회문은 1개가 존재하는데, 가로 뿐만 아니라 세로로 찾아질 수도 있다.

[입력]

첫 줄에 테스트 케이스 개수 T가 주어진다.  1≤T≤50
다음 줄부터 테스트케이스의 첫 줄에 N과 M이 주어진다. 10≤N≤100, 5≤M≤N
다음 줄부터 N개의 글자를 가진 N개의 줄이 주어진다.

[출력]

각 줄마다 "#T" (T는 테스트 케이스 번호)를 출력한 뒤, 답을 출력한다.
'''

# 힌트
# 1989. 초심자의 회문검사 처럼 인덱스 슬라이싱 하며 양 끝 비교하기?
# 구간을 옮겨다니며 검사해야한다. + 인덱스 슬라이싱은 세로열에서는 불가능
# 방법 1. 인덱스를 이용하여 일일히 탐색하기
# 방법 2. 인덱스 슬라이싱을 통한 비교를 위해 행을 열로 변환한다. (가로로만 찾기위해)(전치행렬 활용)
#  2-1. zip 활용?


T = int(input())
for test_case in range(1, T+1):
    N, M = map(int, input().split())
    arr = [list(map(int, input().split())) for _ in range(N)]

    pal = []
    for i in range(N-1):        # i 행에 대해
        for j in range(N-1):        # j 열부터 길이가 M인 회문인가?
            for k in range(M//2-1):     # 회문인지 확인하는 비교 횟수 k (슬라이싱 비교)
                if arr[i][j+k] != arr[i][j+M-1-k]:
                    pass
                # 위의 내용을 가로 세로로 수행