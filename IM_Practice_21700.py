# 21700. 마을의 중계기
# math 함수 활용법 숙지 (올림 ceil)
"""
가로와 세로가 N x N 크기인 정사각형 모양의 어느 한 마을에서 중계기를 설치하려고 한다.

마을 주민 모두에게 원활한 통신 서비스를 제공하기 위해, 마을에 있는 모든 집들이

중계기의 통신 범위 안에 포함되도록 설치하되, 통신 범위를 최소화 하는 것이 목표이다.

중계기는 입력으로 주어진 위치 (y, x)에 설치된다.

중계기의 통신 범위는 원 모양으로, 반지름 R의 범위는 1 이상 정수이다.

마을에 있는 집의 위치와 중계기의 위치가 입력으로 주어졌을 때, 마을의 모든 집들을 포함할수 있는

중계기 통신범위의 반지름 R의 최소값을 구하는 프로그램을 작성하라.



[제약사항]

1. 지도의 크기 N은 5이상 10 이하의 정수이다 (5 <= N <= 10)

2. 좌표는 좌측 상단부터 (0, 0)으로 시작한다. 지도의 크기는 N x N 크기의 정사각형이며, 모든 집들의 좌표는 격자점 위에 있으므로, 입력으로 주어지는 2차원 Map Data의 크기는 (N)^2이 됨을 유의하라.

3. 중계기의 통신 범위가 최대일 경우에도, 모든 집들이 포함되지 않는 경우는 입력으로 주어지지 않는다.

4. 중계기 통신범위에 포함되는지 여부는 아래와 같이 판단할 수 있다.
집과 중계기의 좌표가 각각 (hy, hx), (y, x)일 경우, 거리 D의 제곱은 다음과 같다.

D^2 = (hy - y)^2 + (hx - x)^2

집과 중계기 간 거리 D의 제곱이 반지름 R의 제곱보다 작거나 같을 경우, 중계기의 통신 범위에 포함된다.


[입력]

첫 줄에 테스트 케이스의 개수 T가 주어진다. 다음 줄부터 각 테스트 케이스가 주어진다.

각 테스트 케이스의 첫 줄에는 Map의 크기 N이 주어진다.

그 다음 줄부터 마을의 집의 위치가 2차원 Map 데이터로 주어진다.

빈 공간은 0, 집이 있는 공간은 1, 중계기가 설치된 공간은 2로 각각 표시된다.

[출력]

테스트 케이스 T에 대한 결과는 "#T"를 찍고, 한 칸 띄고 정답을 출력한다.

(T는 테스트 케이스의 번호를 의미하며, 1부터 시작한다.)

중계기의 통신 범위 반지름 R이 최소가 되는 경우를 찾고, 그 값을 정답으로 출력한다.

위 문제의 코드를 다음과 같이 작성했는데 수정사항을 한글 주석과 함께 알려줘.


"""


import math
import sys
sys.stdin = open("input21700.txt", "r")
sys.stdout = open("output21700.txt", "w")

T = int(input())  # 테스트케이스 번호
for tc in range(1, T+1):
    N = int(input())  # 마을의 크기
    village = [list(map(int, input().split()))for _ in range(N)]  # 마을 데이터
    houses = []  # 집 좌표 리스트 초기화
    y, x = 0, 0  # 중계기 좌표 초기화

    for i in range(N):
        for j in range(N):
            if village[i][j] == 2:  # 중계기 좌표
                y, x = i, j
            if village[i][j] == 1:  # 집 좌표
                houses.append((i, j))

    D_sq_max = 0        # 거리 제곱의 최대값 초기화
    for hy, hx in houses:
        D_sq = (hy-y)**2 + (hx-x)**2    # 거리 제곱 계산
        if D_sq > D_sq_max:
            D_sq_max = D_sq     # 최대값 계산

    min_R = math.ceil(math.sqrt(D_sq_max))      # 통신 범위 반지름의 최소값

    print(f'#{tc} {min_R}')
